# Generated by Django 5.2.5 on 2025-08-30 09:10

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CollateralTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('deposit', 'Deposit'), ('withdrawal', 'Withdrawal'), ('liquidation', 'Liquidation'), ('transfer', 'Transfer')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=8, max_digits=18)),
                ('value_usd_at_time', models.DecimalField(decimal_places=2, max_digits=12)),
                ('transaction_hash', models.CharField(max_length=100, unique=True)),
                ('from_address', models.CharField(blank=True, max_length=100)),
                ('to_address', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('confirmations', models.IntegerField(default=0)),
                ('required_confirmations', models.IntegerField(default=6)),
                ('gas_fee', models.DecimalField(decimal_places=8, default=0, max_digits=18)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CryptoWallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wallet_address', models.CharField(max_length=100, unique=True)),
                ('private_key_encrypted', models.TextField()),
                ('balance', models.DecimalField(decimal_places=8, default=0, max_digits=18)),
                ('status', models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended'), ('frozen', 'Frozen')], default='active', max_length=20)),
                ('last_sync_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='LiquidationEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trigger_ltv_ratio', models.FloatField()),
                ('collateral_price_at_trigger', models.DecimalField(decimal_places=8, max_digits=18)),
                ('liquidated_amount', models.DecimalField(decimal_places=8, max_digits=18)),
                ('liquidation_value_usd', models.DecimalField(decimal_places=2, max_digits=12)),
                ('remaining_debt', models.DecimalField(decimal_places=2, max_digits=12)),
                ('excess_collateral', models.DecimalField(decimal_places=8, default=0, max_digits=18)),
                ('liquidation_fee', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('status', models.CharField(choices=[('initiated', 'Initiated'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed'), ('partial', 'Partial')], default='initiated', max_length=20)),
                ('liquidation_transaction_hash', models.CharField(blank=True, max_length=100)),
                ('automated', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('principal_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('interest_rate', models.FloatField()),
                ('term_days', models.IntegerField()),
                ('collateral_amount', models.DecimalField(decimal_places=8, max_digits=18)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paid_off', 'Paid Off'), ('defaulted', 'Defaulted'), ('liquidated', 'Liquidated'), ('suspended', 'Suspended')], default='active', max_length=20)),
                ('disbursed_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_paid', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('outstanding_balance', models.DecimalField(decimal_places=2, max_digits=12)),
                ('next_payment_due', models.DateTimeField()),
                ('maturity_date', models.DateTimeField()),
                ('smart_contract_address', models.CharField(blank=True, max_length=100)),
                ('current_ltv_ratio', models.FloatField(default=0.0)),
                ('liquidation_threshold', models.FloatField()),
                ('warning_threshold', models.FloatField()),
                ('auto_liquidation_enabled', models.BooleanField(default=True)),
                ('disbursed_at', models.DateTimeField(blank=True, null=True)),
                ('paid_off_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LoanAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('payment_due', 'Payment Due'), ('payment_overdue', 'Payment Overdue'), ('ltv_warning', 'LTV Warning'), ('liquidation_warning', 'Liquidation Warning'), ('liquidation_executed', 'Liquidation Executed'), ('loan_paid_off', 'Loan Paid Off')], max_length=30)),
                ('message', models.TextField()),
                ('severity', models.CharField(choices=[('info', 'Info'), ('warning', 'Warning'), ('critical', 'Critical')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('acknowledged', 'Acknowledged'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('sent_via', models.JSONField(default=list)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='LoanApplication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('requested_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('requested_term_days', models.IntegerField()),
                ('collateral_amount', models.DecimalField(decimal_places=8, max_digits=18)),
                ('collateral_value_usd', models.DecimalField(decimal_places=2, max_digits=12)),
                ('loan_to_value_ratio', models.FloatField()),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], default='pending', max_length=20)),
                ('application_data', models.JSONField(default=dict)),
                ('credit_score', models.IntegerField(blank=True, null=True)),
                ('approval_notes', models.TextField(blank=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LoanPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.CharField(choices=[('interest', 'Interest Payment'), ('principal', 'Principal Payment'), ('full_repayment', 'Full Repayment'), ('penalty', 'Penalty Payment')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('currency', models.CharField(default='USD', max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('transaction_hash', models.CharField(blank=True, max_length=100)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('due_date', models.DateTimeField()),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('late_fee', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='LoanProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('min_loan_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('max_loan_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('annual_interest_rate', models.FloatField(help_text='Annual interest rate as percentage')),
                ('min_term_days', models.IntegerField()),
                ('max_term_days', models.IntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SmartContractInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interaction_type', models.CharField(choices=[('deposit_collateral', 'Deposit Collateral'), ('withdraw_collateral', 'Withdraw Collateral'), ('liquidate', 'Liquidate'), ('repay_loan', 'Repay Loan'), ('update_oracle', 'Update Oracle')], max_length=30)),
                ('contract_address', models.CharField(max_length=100)),
                ('function_name', models.CharField(max_length=100)),
                ('parameters', models.JSONField(default=dict)),
                ('transaction_hash', models.CharField(max_length=100, unique=True)),
                ('gas_used', models.BigIntegerField()),
                ('gas_price', models.BigIntegerField()),
                ('success', models.BooleanField()),
                ('error_message', models.TextField(blank=True)),
                ('block_number', models.BigIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SupportedCryptocurrency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('symbol', models.CharField(max_length=20, unique=True)),
                ('contract_address', models.CharField(blank=True, max_length=100)),
                ('network', models.CharField(choices=[('ethereum', 'Ethereum'), ('bitcoin', 'Bitcoin'), ('binance_smart_chain', 'Binance Smart Chain'), ('polygon', 'Polygon'), ('avalanche', 'Avalanche'), ('solana', 'Solana')], max_length=50)),
                ('min_collateral_amount', models.DecimalField(decimal_places=8, max_digits=18)),
                ('loan_to_value_ratio', models.FloatField(help_text='Maximum LTV ratio (e.g., 0.7 for 70%)')),
                ('liquidation_threshold', models.FloatField(help_text='LTV ratio that triggers liquidation')),
                ('is_active', models.BooleanField(default=True)),
                ('current_price_usd', models.DecimalField(decimal_places=8, default=0, max_digits=18)),
                ('price_updated_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['symbol'],
            },
        ),
    ]
