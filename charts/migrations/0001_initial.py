# Generated by Django 5.2.5 on 2025-08-30 09:10

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ChartLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChartPrediction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('prediction_date', models.DateTimeField(auto_now_add=True)),
                ('target_date', models.DateTimeField()),
                ('current_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('predicted_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('actual_price', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('accuracy_percentage', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('duration_days', models.IntegerField()),
                ('confidence_level', models.IntegerField(choices=[(1, '1%'), (2, '2%'), (3, '3%'), (4, '4%'), (5, '5%'), (6, '6%'), (7, '7%'), (8, '8%'), (9, '9%'), (10, '10%'), (11, '11%'), (12, '12%'), (13, '13%'), (14, '14%'), (15, '15%'), (16, '16%'), (17, '17%'), (18, '18%'), (19, '19%'), (20, '20%'), (21, '21%'), (22, '22%'), (23, '23%'), (24, '24%'), (25, '25%'), (26, '26%'), (27, '27%'), (28, '28%'), (29, '29%'), (30, '30%'), (31, '31%'), (32, '32%'), (33, '33%'), (34, '34%'), (35, '35%'), (36, '36%'), (37, '37%'), (38, '38%'), (39, '39%'), (40, '40%'), (41, '41%'), (42, '42%'), (43, '43%'), (44, '44%'), (45, '45%'), (46, '46%'), (47, '47%'), (48, '48%'), (49, '49%'), (50, '50%'), (51, '51%'), (52, '52%'), (53, '53%'), (54, '54%'), (55, '55%'), (56, '56%'), (57, '57%'), (58, '58%'), (59, '59%'), (60, '60%'), (61, '61%'), (62, '62%'), (63, '63%'), (64, '64%'), (65, '65%'), (66, '66%'), (67, '67%'), (68, '68%'), (69, '69%'), (70, '70%'), (71, '71%'), (72, '72%'), (73, '73%'), (74, '74%'), (75, '75%'), (76, '76%'), (77, '77%'), (78, '78%'), (79, '79%'), (80, '80%'), (81, '81%'), (82, '82%'), (83, '83%'), (84, '84%'), (85, '85%'), (86, '86%'), (87, '87%'), (88, '88%'), (89, '89%'), (90, '90%'), (91, '91%'), (92, '92%'), (93, '93%'), (94, '94%'), (95, '95%'), (96, '96%'), (97, '97%'), (98, '98%'), (99, '99%'), (100, '100%')], default=50)),
                ('notes', models.TextField(blank=True)),
                ('is_public', models.BooleanField(default=True)),
                ('likes_count', models.IntegerField(default=0)),
                ('views_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('prize_pool', models.DecimalField(decimal_places=2, max_digits=10)),
                ('entry_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('max_participants', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('rules', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContestParticipation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('final_accuracy', models.FloatField(blank=True, null=True)),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('prize_won', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Market',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('symbol', models.CharField(max_length=20, unique=True)),
                ('market_type', models.CharField(choices=[('crypto', 'Cryptocurrency'), ('us_stock', 'US Stock'), ('kr_stock', 'Korean Stock'), ('jp_stock', 'Japanese Stock'), ('in_stock', 'Indian Stock'), ('uk_stock', 'UK Stock'), ('ca_stock', 'Canadian Stock'), ('fr_stock', 'French Stock'), ('de_stock', 'German Stock'), ('tw_stock', 'Taiwanese Stock')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('api_symbol', models.CharField(help_text='Symbol used in API calls', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['symbol'],
            },
        ),
        migrations.CreateModel(
            name='StockData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('open_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('high_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('low_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('close_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('volume', models.BigIntegerField()),
                ('market_cap', models.BigIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TechnicalIndicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indicator_type', models.CharField(choices=[('sma', 'Simple Moving Average'), ('ema', 'Exponential Moving Average'), ('rsi', 'Relative Strength Index'), ('macd', 'MACD'), ('bollinger', 'Bollinger Bands'), ('stochastic', 'Stochastic Oscillator')], max_length=50)),
                ('period', models.IntegerField()),
                ('value', models.DecimalField(decimal_places=4, max_digits=15)),
                ('timestamp', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ChartComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='charts.chartcomment')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
